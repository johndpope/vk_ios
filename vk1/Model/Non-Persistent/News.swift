import Foundation
import SwiftyJSON


class News : DecodableProtocol, PlainModelProtocol {

    var id: typeId = 0
    var cellType: WallCellConstant.CellTypeEnum = .unknown
    var imagesPlanCode: String!
    var ownerId = 0
    
    // wall header block
    var avaURL: URL?
    var name: String = ""
    var postDate: Double = 0
    var title: String = ""
    
    // wall media block
    var imageURLs: [URL] = []
    var videos: [Video] = []
    
    // wall footer block
    var likeCount = 0
    var viewCount = 0
    var messageCount = 0
    var shareCount = 0
    
    var ownOffset = 0 // generated by app
    var vkOffset = "" // returned by vk server
    var createDate = 0
    
    struct Video {
        var id: Int = 0
        var ownerId: Int = 0
        var platform: WallCellConstant.VideoPlatform = .other
        var url: URL?
    }
    
    required init(){}

    func setup(json: JSON?){}
}



extension News: WallModelProtocol {
    
    func getId() -> typeId {
        return id
    }
    
    func getSortBy() -> String {
        return "\(postDate)"
    }
    
    // wall header block >>
    func getMyName() -> String? {
        return nil
    }
    
    func getMyAvaURL() -> URL? {
        return nil
    }
    
    func getMyPostDate() -> Double {
        return 0.0
    }
    
    func getTitle() -> String? {
        return nil
    }
    
    func getOrigName() -> String? {
        return name
    }
    
    func getOrigAvaURL() -> URL? {
        return avaURL
    }
    
    
    func getOrigPostDate() -> Double {
        return postDate
    }
    
    func getOrigTitle() -> String? {
        return title
    }
    
    // wall media block >>
    func getImageURLs() -> [URL] {
        return imageURLs
    }
    
    func getCellType() -> WallCellConstant.CellTypeEnum {
        return cellType
    }

    
    // wall footer block >>
    func getLikeCount() -> Int {
           return likeCount
    }
    
    func getMessageCount()->Int {
          return messageCount
    }
      
    func getShareCount()->Int {
      return shareCount
    }

    func getEyeCount()->Int {
      return viewCount
    }

}
